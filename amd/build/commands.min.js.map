{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_inokufu plugin.\n *\n * @module      tiny_inokufu/commands\n * @copyright   2024 Inokufu\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport { getButtonImage, displayFilepicker } from 'editor_tiny/utils';\nimport { get_string as getString } from 'core/str';\nimport { getImagePermissions } from './options';\nimport { component, inosearchButtonName, icon } from './common';\n\n/**\n * Handle the action on a click on the plugin's icon.\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n */\nconst makeInoSearch = (editor) => {\n    const canShowFilePicker = getImagePermissions(editor).filepicker;\n\n    if (canShowFilePicker) {\n        displayFilepicker(editor, 'link').then((params) => {\n            if (params.url !== '') {\n                fetch(params.url).then(html => {\n                    html.text().then(output => {\n                        editor.insertContent(output);\n                    });\n                });\n            }\n            return;\n        }).catch();\n    }\n};\n\n/**\n * Get the setup function for the buttons.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async () => {\n    const [\n        inosearchButtonNameTitle,\n        buttonImage,\n    ] = await Promise.all([\n        getString('button_inosearch', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        // Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the inosearch Toolbar Button.\n        editor.ui.registry.addButton(inosearchButtonName, {\n            icon,\n            tooltip: inosearchButtonNameTitle,\n            onAction: () => makeInoSearch(editor),\n        });\n    };\n};\n"],"names":["async","inosearchButtonNameTitle","buttonImage","Promise","all","component","editor","ui","registry","addIcon","icon","html","addButton","inosearchButtonName","tooltip","onAction","filepicker","then","params","url","fetch","text","output","insertContent","catch","makeInoSearch"],"mappings":"qPAyDwBA,gBAEhBC,yBACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,mBAAoBC,oBAC9B,yBAAe,OAAQA,4BAGnBC,SAEJA,OAAOC,GAAGC,SAASC,QAAQC,aAAMR,YAAYS,MAG7CL,OAAOC,GAAGC,SAASI,UAAUC,4BAAqB,CAC9CH,KAAAA,aACAI,QAASb,yBACTc,SAAU,IA1CCT,CAAAA,UACO,gCAAoBA,QAAQU,yCAGhCV,OAAQ,QAAQW,MAAMC,SACjB,KAAfA,OAAOC,KACPC,MAAMF,OAAOC,KAAKF,MAAKN,OACnBA,KAAKU,OAAOJ,MAAKK,SACbhB,OAAOiB,cAAcD,iBAKlCE,SA6BiBC,CAAcnB"}